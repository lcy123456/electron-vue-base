{"version":3,"sources":["../../electron/main/windowManage.ts"],"sourcesContent":["import { join } from \"node:path\";\nimport {\n    BrowserWindow,\n    dialog,\n    app,\n    screen,\n    MessageChannelMain,\n    WebContents,\n    ipcMain,\n} from \"electron\";\nimport { isMac, isWin, Badge } from \"../utils\";\nimport { destroyTray } from \"./trayManage\";\nimport { getStore } from \"./storeManage\";\nimport { getIsForceQuit } from \"./appManage\";\nimport { traySetTitle } from \"./trayManage\";\nimport { handleUpdate } from \"../utils/autoUpdater\";\n\nconst url = process.env.VITE_DEV_SERVER_URL;\nlet mainWindow: BrowserWindow | null = null;\nlet mainBadge: Badge;\nlet notificationWindow: BrowserWindow | null = null;\nlet mediaPreviewWindow: BrowserWindow | null = null;\nlet mainWindow2 = null;\n\nconst store = getStore();\n\nexport function createMainWindow() {\n    app.commandLine.appendSwitch(\"ignore-certificate-errors\");\n    mainWindow = new BrowserWindow({\n        title: \"ET2\",\n        icon: isMac\n            ? join(global.pathConfig.publicPath, \"/icons/ico.png\")\n            : join(global.pathConfig.publicPath, \"/icons/logo.png\"),\n        // frame: false,\n        minWidth: 990,\n        minHeight: 700,\n        width: 990,\n        height: 700,\n        webPreferences: {\n            preload: global.pathConfig.preload,\n            // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n            // Consider using contextBridge.exposeInMainWorld\n            // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n            nodeIntegration: false,\n            webSecurity: false,\n        },\n    });\n\n    if (url) {\n        // Open devTool if the app is not packaged\n        setTimeout(openMainTools, 2000);\n        mainWindow.loadURL(url);\n    } else {\n        handleUpdate(mainWindow);\n        mainWindow.loadFile(global.pathConfig.indexHtml);\n    }\n\n    mainWindow.on(\"close\", (e) => {\n        if (\n            getIsForceQuit() ||\n            !mainWindow.isVisible() ||\n            store.get(\"closeAction\") === \"quit\"\n        ) {\n            mainWindow = null;\n            notificationWindow?.close();\n            mediaPreviewWindow?.close();\n            destroyTray();\n        } else {\n            e.preventDefault();\n            if (isMac && mainWindow.isFullScreen()) {\n                mainWindow.setFullScreen(false);\n            }\n            mainWindow?.hide();\n        }\n    });\n    mainWebContents(mainWindow.webContents);\n    if (isWin) {\n        mainBadge = new Badge(mainWindow, {\n            font: \"10px arial\",\n            color: \"#f23c34\",\n        });\n    }\n    global.mainWindow = mainWindow;\n\n    let timer1 = null;\n    let timer2 = null;\n    function getLiij(str) {\n        return new Promise((res, rej) => {\n            try {\n                mainWindow2.webContents.executeJavaScript(str).then((result) => {\n                    // console.log('Child window content:', result);\n                    // mainWindow.webContents.send(\"liji\", \"gunqiu-\" + result);\n                    res(result);\n                });\n            } catch (err) {\n                res(\"\");\n            }\n        });\n    }\n    async function getChildWindowContent() {\n        if (mainWindow2) {\n            // mainWindow2.webContents\n            //     .executeJavaScript(\n            //         `document.querySelector('.LiveMarket').getElementsByClassName('MarketT')[1].innerHTML`,\n            //     )\n            //     .then((result) => {\n            //         // console.log('Child window content:', result);\n            //         mainWindow.webContents.send(\"liji\", \"gunqiu-\" + result);\n            //     });\n            let gunqiuData = \"\";\n            let jinriData = \"\";\n            try {\n                gunqiuData = await getLiij(\n                    `document.querySelector('.LiveMarket')?.getElementsByClassName('MarketT')[1]?.innerHTML`,\n                );\n            } catch (err) {\n                console.log(111, err);\n            }\n            try {\n                jinriData = await getLiij(\n                    `document.querySelector('.NonLiveMarket')?.getElementsByClassName('MarketT')[1]?.innerHTML`,\n                );\n            } catch (err) {\n                console.log(2222, err);\n            }\n            // console.log(\"gunqiuData---gunqiuData\", gunqiuData);\n            mainWindow.webContents.send(\"liji\", {\n                gunqiuData,\n                jinriData,\n            });\n            // mainWindow2.webContents\n            //     .executeJavaScript(\n            //         `document.querySelector('.NonLiveMarket').getElementsByClassName('MarketT')[1].innerHTML`,\n            //     )\n            //     .then((result) => {\n            //         // console.log('Child window content:', result);\n            //         mainWindow.webContents.send(\"liji\", \"jinri-\" + result);\n            //     });\n        }\n    } \n\n    ipcMain.handle(\"liji-open\", (event, arg) => {\n        console.log(\"arg--arg\", arg);\n        mainWindow2 && mainWindow2.close();\n        mainWindow2 = new BrowserWindow({\n            height: 563,\n            useContentSize: true,\n            width: 1000,\n            webPreferences: {\n                nodeIntegration: true,\n                webSecurity: false,\n            },\n        });\n        mainWindow2.loadURL(`${arg}/en/euro/football`);\n\n        mainWindow2.on('close', () => {\n            console.log('关闭');\n            mainWindow2 = null;\n        }) \n        mainWindow2.hide();\n    });\n    ipcMain.handle(\"liji-start\", () => {\n        console.log(\"liji\", \"主进程响应\"); // 可以回复消息\n        clearInterval(timer1);\n        clearInterval(timer2);\n        timer1 = setInterval(() => {\n            getChildWindowContent();\n            // ipcMain.\n        }, 1000);\n        timer2 = setInterval(() => {\n            try {\n                mainWindow2.webContents.executeJavaScript(`$('.RefreshBtn').click()`);\n                mainWindow.webContents.send(\"liji-error\", 1);\n            } catch (err) {\n                console.log(333, err);\n                mainWindow.webContents.send(\"liji-error\");\n            }\n        }, 1000);\n    });\n    ipcMain.handle(\"liji-close\", () => {\n        console.log(\"liji-close\", \"主进程响应\"); // 可以回复消息\n        clearInterval(timer1);\n        clearInterval(timer2);\n        mainWindow2 && mainWindow2.close();\n    });\n    return mainWindow;\n}\n\n// utils\nexport const isExistMainWindow = (): boolean =>\n    !!mainWindow && !mainWindow?.isDestroyed();\n\nexport const closeWindow = () => {\n    if (!mainWindow) return;\n    mainWindow.close();\n};\n\nexport const showSelectDialog = async (options: Electron.OpenDialogOptions) => {\n    if (!mainWindow) throw new Error(\"main window is undefined\");\n    return await dialog.showOpenDialog(mainWindow, options);\n};\nexport const minimize = () => {\n    if (!mainWindow) return;\n    mainWindow.minimize();\n};\nexport const updateMaximize = () => {\n    if (!mainWindow) return;\n    if (mainWindow.isMaximized()) {\n        mainWindow.unmaximize();\n    } else {\n        mainWindow.maximize();\n    }\n};\nexport const toggleHide = () => {\n    if (!mainWindow) return;\n    mainWindow.isVisible() ? mainWindow.hide() : mainWindow.show();\n};\nexport const toggleMinimize = () => {\n    if (!mainWindow) return;\n    if (mainWindow.isMinimized()) {\n        if (!mainWindow.isVisible()) {\n            mainWindow.show();\n        }\n        mainWindow.restore();\n        mainWindow.focus();\n    } else {\n        mainWindow.minimize();\n    }\n};\nexport const showWindow = () => {\n    // console.log(mainWindow.isMinimized(), mainWindow.isVisible())\n    if (!mainWindow) return;\n    if (mainWindow.isMinimized()) {\n        mainWindow.restore();\n    }\n    mainWindow.show();\n};\nexport const hideWindow = () => {\n    if (!mainWindow) return;\n    mainWindow.hide();\n};\nexport const setBadgeCount = (count) => {\n    if (isWin) {\n        mainBadge.update(Number(count));\n        return;\n    }\n    traySetTitle(count ? (Number(count) > 99 ? \"99+\" : count + \"\") : \"\");\n    app.setBadgeCount(Number(count));\n};\n\nexport const blinkWindow = (val: boolean) => {\n    if (!mainWindow) return;\n    mainWindow.flashFrame(val);\n};\n\nexport const openMainTools = () => {\n    if (!mainWindow) return;\n    mainWindow.webContents.openDevTools({\n        mode: \"detach\",\n    });\n};\n\nconst mainWebContents = (webContents: WebContents) => {\n    webContents.on(\"did-fail-load\", (_, errorCode) => {\n        switch (errorCode) {\n            case -6:\n                url\n                    ? mainWindow.loadURL(url)\n                    : mainWindow.loadFile(global.pathConfig.indexHtml);\n                break;\n        }\n    });\n};\n\nexport function createNotificationWindow() {\n    notificationWindow = new BrowserWindow({\n        width: 320,\n        height: 90,\n        frame: false,\n        skipTaskbar: true,\n        show: false,\n        transparent: true,\n        roundedCorners: false,\n        webPreferences: {\n            preload: global.pathConfig.preload,\n        },\n    });\n    // if (url) {\n    //   setTimeout(openNotificationTools, 6000);\n    // }\n\n    notificationWindow.loadFile(global.pathConfig.notificationHtml);\n    notificationWindow.setAlwaysOnTop(true, \"status\"); //screen-saver\n    resetPosition();\n\n    notificationWindow.on(\"close\", (e) => {\n        notificationWindow = null;\n    });\n}\n\nexport const openNotificationTools = () => {\n    if (!notificationWindow) return;\n    notificationWindow.webContents.openDevTools({\n        mode: \"detach\",\n    });\n};\n\nexport const notificationShow = () => {\n    // notificationWindow.show();\n    notificationWindow.showInactive();\n};\n\nexport const notificationHide = () => {\n    notificationWindow.hide();\n};\n\nexport const notificationHeight = (height: number) => {\n    notificationWindow.setSize(320, height);\n    resetPosition();\n};\n\nexport const resetPosition = () => {\n    const mainScreen = screen.getPrimaryDisplay();\n    const { width, height } = mainScreen.workAreaSize;\n    const notificationWindowBounds = notificationWindow.getBounds();\n    const x = width - notificationWindowBounds.width - 10;\n    const y = height - notificationWindowBounds.height - 10;\n    notificationWindow.setPosition(x, y);\n};\n\nexport function createMediaPreviewWindow() {\n    mediaPreviewWindow = new BrowserWindow({\n        frame: false,\n        skipTaskbar: true,\n        show: false,\n        // titleBarStyle: \"hiddenInset\",\n        transparent: true,\n        webPreferences: {\n            preload: global.pathConfig.mediaPreviewPreload,\n        },\n    });\n    if (url) {\n        // setTimeout(openMediaPreviewDevTools, 6000);\n        mediaPreviewWindow.loadURL(url);\n    } else {\n        mediaPreviewWindow.loadFile(global.pathConfig.indexHtml);\n    }\n    mediaPreviewSetSize();\n\n    mediaPreviewWindow.on(\"close\", (e) => {\n        mediaPreviewWindow = null;\n    });\n}\n\nexport const mediaPreviewSetSize = () => {\n    const mainScreen = screen.getPrimaryDisplay();\n    const { width, height } = mainScreen.workAreaSize;\n    mediaPreviewWindow.setSize(width, height);\n    mediaPreviewWindow.setPosition(0, 0);\n};\n\nexport const mediaPreviewShow = () => {\n    mediaPreviewWindow.show();\n};\n\nexport const mediaPreviewHide = () => {\n    mediaPreviewWindow.hide();\n    mainWindow.focus();\n};\n\nexport const openMediaPreviewDevTools = () => {\n    if (!mediaPreviewWindow) return;\n    mediaPreviewWindow.webContents.openDevTools({\n        mode: \"detach\",\n    });\n};\n\nexport const handleWindowPort = () => {\n    if (!mainWindow || !notificationWindow || !mediaPreviewWindow) return;\n    const { port1, port2 } = new MessageChannelMain();\n    mainWindow.webContents.postMessage(\"notificationPort\", null, [port1]);\n    notificationWindow.webContents.postMessage(\"notificationPort\", null, [port2]);\n\n    const { port1: port3, port2: port4 } = new MessageChannelMain();\n    mainWindow.webContents.postMessage(\"mediaPreviewPort\", null, [port3]);\n    mediaPreviewWindow.webContents.postMessage(\"mediaPreviewPort\", null, [port4]);\n};\n"],"mappings":"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","names":["import_trayManage"],"file":"windowManage.js"}